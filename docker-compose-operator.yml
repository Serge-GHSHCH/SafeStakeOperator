version: '3'
services:
  geth:
    image: ethereum/client-go:v1.11.3
    pull_policy: always
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - jwt-data:/data/jwt
      - geth-data:/data/geth
    command: [
      "--${GETH_NETWORK}",
      "--syncmode=snap",
      "--http",
      "--http.addr=0.0.0.0",
      "--http.vhosts=*",
      "--http.port=8545",
      "--authrpc.addr=0.0.0.0",
      "--authrpc.vhosts=*",
      "--authrpc.port=8551",
      "--discovery.port=30303",
      "--port=30303",
      "--datadir=/data/geth",
      "--pprof",
      "--pprof.addr=0.0.0.0",
      "--http.api=engine,eth,web3,net,debug",
      "--http.corsdomain=*",
      "--authrpc.jwtsecret=/data/jwt/jwtsecret"
    ]
    expose:
      - "8545"
      - "8546"
      - "8547"
      - "8551"
      - "30303"
  lighthouse:
    network_mode: "host"
    image: sigp/lighthouse:v3.5.1
    pull_policy: always
    restart: unless-stopped
    volumes:
      - geth-data:/data/geth
      - jwt-data:/data/jwt
      - lighthouse-data:/data/lighthouse
    command:
      [
        "lighthouse",
        "bn",
        "--network=${LIGHTHOUSE_NETWORK}",
        "--datadir=/data/lighthouse",
        "--execution-jwt=/data/jwt/jwtsecret",
        "--http",
        "--listen-address=0.0.0.0",
        "--http-address=0.0.0.0",
        "--http-port=5052",
        "--staking",
        "--http-allow-sync-stalled",
        "--merge",
        "--execution-endpoint=http://127.0.0.1:8551",
        "--metrics",
        "--metrics-address=0.0.0.0",
        "--subscribe-all-subnets",
        "--import-all-attestations",
        "--validator-monitor-auto",
        "--checkpoint-sync-url=https://goerli.checkpoint-sync.ethpandaops.io",
        "--terminal-total-difficulty-override=${TTD}"
      ]
    expose:
      - "5052"
      - "9000"
      - "5054"
    depends_on:
      geth:
        condition: service_started

  operator:
    network_mode: "host"
    volumes:
      - operator-data:/root/.lighthouse
    image: parastate/dvf-operator:${IMAGE_TAG}
    pull_policy: always
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      - |
        node_ip=$$(curl -s ifconfig.me)
        dvf validator_client --debug-level=info --network=${OPERATOR_NETWORK} --beacon-nodes=${BEACON_NODE_ENDPOINT} --api=${API_SERVER} --ws-url=${WS_URL}  --ip=$$node_ip --id=${OPERATOR_ID} --boot-enr=${ENR} --registry-contract=${REGISTRY_CONTRACT_ADDRESS} --network-contract=${NETWORK_CONTRACT_ADDRESS} --base-port=26000 2>&1
    expose:
      - "26000"
      - "26001"
      - "26002"
      - "26003"
      - "26004"
      - "26005"
    deploy:
      resources:
        limits:
          memory: 5G

  dvf_key_tool:
    network_mode: "host"
    volumes:
      - operator-data:/root/.lighthouse
    image: parastate/dvf-operator:${IMAGE_TAG}
    pull_policy: always
    command:
      - /bin/sh
      - -c
      - |
        dvf_key_tool ${OPERATOR_NETWORK}
    deploy:
      resources:
        limits:
          memory: 5G

volumes:
  geth-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/geth
  lighthouse-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/lighthouse
  jwt-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/jwt
  operator-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /data/operator